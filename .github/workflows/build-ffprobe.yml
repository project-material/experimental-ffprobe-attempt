name: Build FFprobe

on:
  workflow_dispatch:
    inputs:
      abi:
        description: "Target ABI (arm64-v8a, armeabi-v7a, x86, x86_64)"
        required: true
        default: "arm64-v8a"
      demuxers:
        description: "Comma-separated demuxers to enable"
        required: true
        default: "mov,matroska,avi,flv,ogg"
      parsers:
        description: "Comma-separated parsers to enable"
        required: true
        default: "h264,hevc,vp8,vp9,av1"
      protocols:
        description: "Comma-separated protocols to enable"
        required: true
        default: "file"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout workflow repo
        uses: actions/checkout@v5

      - name: Cache FFmpeg source
        uses: actions/cache@v4
        with:
          path: ffmpeg
          key: ffmpeg-src-${{ runner.os }}-${{ hashFiles('.github/workflows/*.yml') }}

      - name: Clone FFmpeg if not cached
        run: |
          if [ ! -d "ffmpeg/.git" ]; then
            rm -rf ffmpeg
            git clone --depth=1 https://github.com/FFmpeg/FFmpeg ffmpeg
          fi

      - name: Set up NDK (r28c)
        uses: HoshinoSuzumi/setup-ndk@v1
        with:
          ndk-version: r28c

      - name: Configure environment
        run: |
          ABI="${{ github.event.inputs.abi }}"
          case "$ABI" in
            arm64-v8a)
              ARCH=aarch64
              CPU=armv8-a
              ;;
            armeabi-v7a)
              ARCH=arm
              CPU=armv7-a
              ;;
            x86)
              ARCH=x86
              CPU=
              ;;
            x86_64)
              ARCH=x86_64
              CPU=
              ;;
            *)
              echo "Unsupported ABI: $ABI"
              exit 1
              ;;
          esac

          echo "ARCH=$ARCH" >> $GITHUB_ENV
          echo "CPU=$CPU" >> $GITHUB_ENV
          echo "ABI=$ABI" >> $GITHUB_ENV
          echo "OUTPUT_DIR=$GITHUB_WORKSPACE/build/ffprobe-$ABI-${{ github.run_id }}" >> $GITHUB_ENV
          echo "CC=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/${ARCH}-linux-android31-clang" >> $GITHUB_ENV
          echo "CXX=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/${ARCH}-linux-android31-clang++" >> $GITHUB_ENV

      - name: Cache FFprobe build
        uses: actions/cache@v4
        with:
          path: build
          key: ffprobe-${{ github.event.inputs.abi }}-${{ github.event.inputs.demuxers }}-${{ github.event.inputs.parsers }}-${{ github.event.inputs.protocols }}

      - name: Build FFprobe
        run: |
          cd ffmpeg
          ./configure \
            --prefix="$OUTPUT_DIR" \
            --disable-everything \
            --disable-ffmpeg \
            --disable-ffplay \
            --enable-ffprobe \
            --enable-demuxer=${{ github.event.inputs.demuxers }} \
            --enable-parser=${{ github.event.inputs.parsers }} \
            --enable-protocol=${{ github.event.inputs.protocols }} \
            --disable-neon \
            --enable-cross-compile \
            --target-os=android \
            --arch=$ARCH \
            ${CPU:+--cpu=$CPU} \
            --cc="$CC" \
            --cxx="$CXX"

          make -j$(nproc)
          make install

          echo "==== FFprobe Version ===="
          $OUTPUT_DIR/bin/ffprobe -version

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ffprobe-${{ github.event.inputs.abi }}
          path: ${{ env.OUTPUT_DIR }}/bin/ffprobe
