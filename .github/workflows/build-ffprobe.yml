name: Build FFprobe

on:
  workflow_dispatch:
    inputs:
      abi:
        description: "Target ABI (arm64-v8a, armeabi-v7a, x86, x86_64)"
        required: true
        default: "arm64-v8a"
      demuxers:
        description: "Comma-separated demuxers to enable"
        required: true
        default: "mov,mp4,mkv,webm,avi,flv,mpeg,matroska,ogg"
      parsers:
        description: "Comma-separated parsers to enable"
        required: true
        default: "h264,h265,hevc,vp8,vp9,av1,mpeg4,theora,xvid"
      protocols:
        description: "Comma-separated protocols to enable"
        required: true
        default: "file"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      # 1. Cache FFmpeg source
      - name: Cache FFmpeg source
        uses: actions/cache@v4
        with:
          path: ffmpeg
          key: ffmpeg-src-${{ runner.os }}-${{ github.event.inputs.abi }}

      # 2. Clone FFmpeg repo if missing
      - name: Clone FFmpeg
        run: |
          if [ ! -d "ffmpeg/.git" ]; then
            git clone --depth=1 https://github.com/FFmpeg/FFmpeg ffmpeg
          fi

      # 3. Set up Android NDK r28c
      - name: Set up Android NDK
        uses: HoshinoSuzumi/setup-ndk@v1
        with:
          ndk-version: r28c

      # 4. Cache ccache
      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ffprobe-ccache-${{ runner.os }}-${{ github.event.inputs.abi }}

      # 5. Install build dependencies (cached via ccache)
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential \
            yasm \
            pkg-config \
            git \
            ca-certificates \
            ccache

      # 6. Sanitize inputs for cache keys
      - name: Sanitize input strings
        run: |
          SAN_DEMUXERS=${{ github.event.inputs.demuxers }}; SAN_DEMUXERS=${SAN_DEMUXERS//,/__}
          SAN_PARSERS=${{ github.event.inputs.parsers }}; SAN_PARSERS=${SAN_PARSERS//,/__}
          SAN_PROTOCOLS=${{ github.event.inputs.protocols }}; SAN_PROTOCOLS=${SAN_PROTOCOLS//,/__}
          echo "SAN_DEMUXERS=$SAN_DEMUXERS" >> $GITHUB_ENV
          echo "SAN_PARSERS=$SAN_PARSERS" >> $GITHUB_ENV
          echo "SAN_PROTOCOLS=$SAN_PROTOCOLS" >> $GITHUB_ENV

      # 7. Cache FFprobe build output
      - name: Cache FFprobe build
        uses: actions/cache@v4
        with:
          path: build
          key: ffprobe-build-${{ github.event.inputs.abi }}-${{ env.SAN_DEMUXERS }}-${{ env.SAN_PARSERS }}-${{ env.SAN_PROTOCOLS }}

      # 8. Configure ABI mapping
      - name: Configure environment
        run: |
          ABI="${{ github.event.inputs.abi }}"
          case "$ABI" in
            arm64-v8a)
              ARCH=aarch64
              CPU=armv8-a
              ;;
            armeabi-v7a)
              ARCH=arm
              CPU=armv7-a
              ;;
            x86)
              ARCH=x86
              CPU=
              ;;
            x86_64)
              ARCH=x86_64
              CPU=
              ;;
            *)
              echo "Unsupported ABI: $ABI"
              exit 1
              ;;
          esac

          echo "ARCH=$ARCH" >> $GITHUB_ENV
          echo "CPU=$CPU" >> $GITHUB_ENV
          echo "ABI=$ABI" >> $GITHUB_ENV
          echo "OUTPUT_DIR=$GITHUB_WORKSPACE/build/ffprobe-$ABI-${{ github.run_id }}" >> $GITHUB_ENV
          echo "CC=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/${ARCH}-linux-android31-clang" >> $GITHUB_ENV
          echo "CXX=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/${ARCH}-linux-android31-clang++" >> $GITHUB_ENV
          echo "CCACHE_DIR=$HOME/.ccache" >> $GITHUB_ENV
          export CCACHE_DIR=$HOME/.ccache
          export CC="ccache $CC"
          export CXX="ccache $CXX"

      # 9. Build FFprobe
      - name: Build FFprobe
        run: |
          cd ffmpeg
          ./configure \
            --prefix="$OUTPUT_DIR" \
            --disable-everything \
            --disable-ffmpeg \
            --disable-ffplay \
            --disable-debug \
            --disable-doc \
            --disable-manpages \
            --disable-podpages \
            --disable-htmlpages \
            --disable-network \
            --disable-neon \
            --disable-stripping \
            --disable-shared \
            --enable-static \
            --enable-ffprobe \
            --enable-demuxer=${{ github.event.inputs.demuxers }} \
            --enable-parser=${{ github.event.inputs.parsers }} \
            --enable-protocol=${{ github.event.inputs.protocols }} \
            --enable-cross-compile \
            --target-os=android \
            --arch=$ARCH \
            ${CPU:+--cpu=$CPU} \
            --cc="$CC" \
            --cxx="$CXX"

          make -j$(nproc)
          make install

      # 10. Upload artifact
      - name: Upload FFprobe binary
        uses: actions/upload-artifact@v4
        with:
          name: ffprobe-${{ github.event.inputs.abi }}
          path: ${{ env.OUTPUT_DIR }}/bin/ffprobe
