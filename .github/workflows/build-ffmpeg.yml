name: Build FFmpeg for Android

on:
  workflow_dispatch:
    inputs:
      sdk-version:
        description: "Android SDK version"
        required: true
        default: "31"
        type: string
      ndk-version:
        description: "Android NDK version"
        required: true
        default: "r28c"
        type: string
      ffmpeg-version:
        description: "FFmpeg version"
        required: true
        default: "n8.0"
        type: string
      ffmpeg-prefix:
        description: "Prefix"
        required: true
        default: "ffprobe"
        type: string
      additional-dependencies:
        description: "Additional dependencies"
        required: false
        default: "libdav1d-dev libvpx-dev libx264-dev libx265-dev libnuma-dev libtheora-dev"
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        
      - name: Clone FFmpeg
        run: |
          git clone --branch ${{ github.event.inputs.ffmpeg-version }} \
            --single-branch \
            --depth=1 \
            https://github.com/FFmpeg/FFmpeg ffmpeg
        
      - name: Setup Android NDK
        uses: HoshinoSuzumi/setup-ndk@v1
        with:
          ndk-version: ${{ github.event.inputs.ndk-version }}
          
      - name: Install required dependencies
        run: |
          sudo apt-get update -qq && sudo apt-get -y install \
            build-essential \
            pkg-config \
            yasm \
            nasm \
            autoconf \
            automake \
            libtool \
            meson \
            ninja-build
            
      - name: Install additional dependencies
        run: |
          sudo apt-get -y install -qq \
            ${{ github.event.inputs.additional-dependencies }}

      - name: Build FFmpeg
        run: |
          # Set environment variables
          export BUILD_DIR="$GITHUB_WORKSPACE/build"
          export BUILD_DIR_FFMPEG="$BUILD_DIR/${{ github.event.inputs.ffmpeg-prefix }}"
          
          export TARGET_API_LEVEL="${{ github.event.inputs.sdk-version }}"
          export TARGET_ARCH="aarch64"
          export TARGET_TRIPLE="aarch64-linux-android"
          
          export NDK_TOOLCHAIN="$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64"
          export SYSROOT="$NDK_TOOLCHAIN/sysroot"
          
          export CC="$NDK_TOOLCHAIN/bin/${TARGET_TRIPLE}${TARGET_API_LEVEL}-clang"
          export CXX="$NDK_TOOLCHAIN/bin/${TARGET_TRIPLE}${TARGET_API_LEVEL}-clang++"
          export LD="$NDK_TOOLCHAIN/bin/ld"
          export AR="$NDK_TOOLCHAIN/bin/llvm-ar"
          export AS="$CC"
          export NM="$NDK_TOOLCHAIN/bin/llvm-nm"
          export RANLIB="$NDK_TOOLCHAIN/bin/llvm-ranlib"
          export STRIP="$NDK_TOOLCHAIN/bin/llvm-strip"
          
          export PATH="$NDK_TOOLCHAIN/bin:$PATH"
          
          # Test the compiler first
          echo "Testing compiler: $CC"
          $CC --version
          echo "int main() { return 0; }" > test.c
          $CC test.c -o test && echo "Compiler test passed" || echo "Compiler test failed"
          
          cd ffmpeg
          
          ./configure \
            --prefix="$BUILD_DIR_FFMPEG" \
            --enable-cross-compile \
            --target-os=android \
            --arch=$TARGET_ARCH \
            --sysroot="$SYSROOT" \
            --cc="$CC" \
            --cxx="$CXX" \
            --ld="$LD" \
            --ar="$AR" \
            --as="$AS" \
            --nm="$NM" \
            --ranlib="$RANLIB" \
            --strip="$STRIP" \
            --enable-shared \
            --disable-static \
            --disable-vulkan \
            --enable-small \
            --disable-ffplay \
            --disable-ffmpeg \
            --enable-ffprobe \
            --disable-doc \
            --disable-avdevice \
            --disable-swresample \
            --enable-gpl \
            --disable-encoders \
            --disable-hwaccels \
            --disable-muxers \
            --disable-bsfs \
            --disable-protocols \
            --disable-indevs \
            --disable-outdevs \
            --disable-devices \
            --enable-protocol=file \
            --disable-debug \
            --enable-libdav1d \
            --enable-libvpx \
            --enable-libx264 \
            --enable-libx265 \
            --enable-libtheora \
            --extra-cflags="-fPIC -I$SYSROOT/usr/include" \
            --extra-ldflags="-pie -L$SYSROOT/usr/lib/$TARGET_TRIPLE/$TARGET_API_LEVEL"
            
          make -j$(nproc)
          make install
          
      - name: Show config.log if build fails
        if: failure()
        run: |
          if [ -f "ffmpeg/ffbuild/config.log" ]; then
            echo "=== CONFIG.LOG CONTENTS ==="
            tail -100 ffmpeg/ffbuild/config.log
          fi
          
      - name: Upload FFprobe binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.ffmpeg-prefix }}
          path: ${{ env.BUILD_DIR }}/${{ github.event.inputs.ffmpeg-prefix }}
